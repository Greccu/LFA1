from graphics import *


class Stare:
    def __init__(self, name):
        self.nume = name

    def Punct(self):
        return Point(x, y)


def same(nod1, nod2):
    if nod1.name == nod2.name:
        return 1
    else:
        return 0


def search(lista, nume):
    for i in range(len(lista)):
        if lista[i].nume == nume:
            return i
    else:
        return "eroare"


class Automat:

    def citire(self):
        with open("automat.in", 'r') as f:
            s = f.readline().split()  #
            self.stari = []
            for i in s:
                self.stari.append(Stare(i))
            t = f.readline().replace("\n", "")  #
            self.sin = self.stari[search(self.stari, t)]
            s = f.readline().split()
            self.sfin = []
            for i in s:
                (self.sfin).append(self.stari[search(self.stari, i)])
            self.tranzitii = {}
            for i in self.stari:
                self.tranzitii[i] = {}
            x = f.readline()
            while x:
                x = x.split()
                self.tranzitii[self.stari[search(self.stari, x[0])]][x[1]] = self.stari[search(self.stari, x[2])]
                x = f.readline()

    def afisare(self):

        print([i.nume for i in self.stari])
        print(self.sin.nume)
        print([i.nume for i in self.sfin])
        print(self.tranzitii)
        print()
        print(self.stari)
        print(self.sin)
        print(self.sfin)
        print(self.tranzitii)

    def verificare(self, cuvant):
        s = self.sin
        ok = 1
        for i in cuvant:
            if i in self.tranzitii[s].keys():
                s = self.tranzitii[s][i]
            else:
                ok = 0
        if (s in self.sfin) and ok == 1:
            print("Cuvant acceptat")
        else:
            print("Cuvantul nu e acceptat")


aut = Automat()
aut.citire()
aut.afisare()

with open("cuvinte.in") as g:
    cuv = g.readline()
    while cuv:
        cuv = cuv.replace("\n", "")
        print(cuv, end=" - ")
        aut.verificare(cuv)
        cuv = g.readline()
